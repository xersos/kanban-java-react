{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\corentin\\\\Documents\\\\PROJET 4.0\\\\Kanban-In-react-java\\\\project-board-react\\\\src\\\\components\\\\ProjectBoard.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ProjectTaskItem from \"./ProjectTask/ProjectTaskItem\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../actions/projectTaskActions\";\n\nclass ProjectBoard extends Component {\n  componentDidMount() {\n    this.props.getBacklog();\n  }\n\n  render() {\n    const project_tasks = this.props.project_tasks.project_tasks;\n    let BoardContent;\n    let todoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n\n    const BoardAlgorithm = project_tasks => {\n      if (project_tasks.length < 1) {\n        return React.createElement(\"div\", {\n          className: \"alert alert-info text-center\",\n          role: \"alert\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, \"No Project Tasks on this board\");\n      } else {\n        const tasks = project_tasks.map(project_task => React.createElement(ProjectTaskItem, {\n          key: project_task.id,\n          project_task: project_task,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }));\n\n        for (let i = 0; i < tasks.length; i++) {\n          if (tasks[i].props.project_task.status === \"TO_DO\") {\n            todoItems.push(tasks[i]);\n          }\n\n          if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\n            inProgressItems.push(tasks[i]);\n          }\n\n          if (tasks[i].props.project_task.status === \"DONE\") {\n            doneItems.push(tasks[i]);\n          }\n        }\n\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col-md-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card text-center mb-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-header bg-secondary text-white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, \"TO DO\"))), todoItems), React.createElement(\"div\", {\n          className: \"col-md-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card text-center mb-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-header bg-primary text-white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, \"In Progress\"))), inProgressItems), React.createElement(\"div\", {\n          className: \"col-md-4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card text-center mb-2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card-header bg-success text-white\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, \"Done\"))), doneItems))));\n      }\n    };\n\n    BoardContent = BoardAlgorithm(project_tasks);\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/addProjectTask\",\n      className: \"btn btn-primary mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-plus-circle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \" Create Project Task\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), BoardContent);\n  }\n\n}\n\nProjectBoard.propTypes = {\n  project_tasks: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project_tasks: state.project_task\n});\n\nexport default connect(mapStateToProps, {\n  getBacklog\n})(ProjectBoard);","map":{"version":3,"sources":["C:\\Users\\corentin\\Documents\\PROJET 4.0\\Kanban-In-react-java\\project-board-react\\src\\components\\ProjectBoard.js"],"names":["React","Component","Link","ProjectTaskItem","connect","PropTypes","getBacklog","ProjectBoard","componentDidMount","props","render","project_tasks","BoardContent","todoItems","inProgressItems","doneItems","BoardAlgorithm","length","tasks","map","project_task","id","i","status","push","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,+BAA3B;;AAEA,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AACnCO,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWH,UAAX;AACD;;AACDI,EAAAA,MAAM,GAAG;AAAA,UACCC,aADD,GACmB,KAAKF,KAAL,CAAWE,aAD9B,CACCA,aADD;AAGP,QAAIC,YAAJ;AACA,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIC,eAAe,GAAG,EAAtB;AACA,QAAIC,SAAS,GAAG,EAAhB;;AAEA,UAAMC,cAAc,GAAGL,aAAa,IAAI;AACtC,UAAIA,aAAa,CAACM,MAAd,GAAuB,CAA3B,EAA8B;AAC5B,eACE;AAAK,UAAA,SAAS,EAAC,8BAAf;AAA8C,UAAA,IAAI,EAAC,OAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADF;AAKD,OAND,MAMO;AACL,cAAMC,KAAK,GAAGP,aAAa,CAACQ,GAAd,CAAkBC,YAAY,IAC1C,oBAAC,eAAD;AAAiB,UAAA,GAAG,EAAEA,YAAY,CAACC,EAAnC;AAAuC,UAAA,YAAY,EAAED,YAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADY,CAAd;;AAIA,aAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAACD,MAA1B,EAAkCK,CAAC,EAAnC,EAAuC;AACrC,cAAIJ,KAAK,CAACI,CAAD,CAAL,CAASb,KAAT,CAAeW,YAAf,CAA4BG,MAA5B,KAAuC,OAA3C,EAAoD;AAClDV,YAAAA,SAAS,CAACW,IAAV,CAAeN,KAAK,CAACI,CAAD,CAApB;AACD;;AAED,cAAIJ,KAAK,CAACI,CAAD,CAAL,CAASb,KAAT,CAAeW,YAAf,CAA4BG,MAA5B,KAAuC,aAA3C,EAA0D;AACxDT,YAAAA,eAAe,CAACU,IAAhB,CAAqBN,KAAK,CAACI,CAAD,CAA1B;AACD;;AAED,cAAIJ,KAAK,CAACI,CAAD,CAAL,CAASb,KAAT,CAAeW,YAAf,CAA4BG,MAA5B,KAAuC,MAA3C,EAAmD;AACjDR,YAAAA,SAAS,CAACS,IAAV,CAAeN,KAAK,CAACI,CAAD,CAApB;AACD;AACF;;AAED,eACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF,CADF,EAUGT,SAVH,CADF,EAgBE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CADF,CADF,EAUGC,eAVH,CAhBF,EA4BE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,CADF,EAWGC,SAXH,CA5BF,CADF,CADF,CADF;AAgDD;AACF,KA3ED;;AA6EAH,IAAAA,YAAY,GAAGI,cAAc,CAACL,aAAD,CAA7B;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,iBAAT;AAA2B,MAAA,SAAS,EAAC,sBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAMGC,YANH,CADF;AAUD;;AArGkC;;AAwGrCL,YAAY,CAACkB,SAAb,GAAyB;AACvBd,EAAAA,aAAa,EAAEN,SAAS,CAACqB,MAAV,CAAiBC,UADT;AAEvBrB,EAAAA,UAAU,EAAED,SAAS,CAACuB,IAAV,CAAeD;AAFJ,CAAzB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCnB,EAAAA,aAAa,EAAEmB,KAAK,CAACV;AADW,CAAL,CAA7B;;AAIA,eAAehB,OAAO,CACpByB,eADoB,EAEpB;AAAEvB,EAAAA;AAAF,CAFoB,CAAP,CAGbC,YAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ProjectTaskItem from \"./ProjectTask/ProjectTaskItem\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getBacklog } from \"../actions/projectTaskActions\";\r\n\r\nclass ProjectBoard extends Component {\r\n  componentDidMount() {\r\n    this.props.getBacklog();\r\n  }\r\n  render() {\r\n    const { project_tasks } = this.props.project_tasks;\r\n\r\n    let BoardContent;\r\n    let todoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n\r\n    const BoardAlgorithm = project_tasks => {\r\n      if (project_tasks.length < 1) {\r\n        return (\r\n          <div className=\"alert alert-info text-center\" role=\"alert\">\r\n            No Project Tasks on this board\r\n          </div>\r\n        );\r\n      } else {\r\n        const tasks = project_tasks.map(project_task => (\r\n          <ProjectTaskItem key={project_task.id} project_task={project_task} />\r\n        ));\r\n\r\n        for (let i = 0; i < tasks.length; i++) {\r\n          if (tasks[i].props.project_task.status === \"TO_DO\") {\r\n            todoItems.push(tasks[i]);\r\n          }\r\n\r\n          if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\r\n            inProgressItems.push(tasks[i]);\r\n          }\r\n\r\n          if (tasks[i].props.project_task.status === \"DONE\") {\r\n            doneItems.push(tasks[i]);\r\n          }\r\n        }\r\n\r\n        return (\r\n          <React.Fragment>\r\n            <div className=\"container\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"card text-center mb-2\">\r\n                    <div className=\"card-header bg-secondary text-white\">\r\n                      <h3>TO DO</h3>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {\r\n                    //<!-- SAMPLE PROJECT TASK STARTS HERE -->\r\n                  }\r\n                  {todoItems}\r\n                  {\r\n                    // <!-- SAMPLE PROJECT TASK ENDS HERE -->\r\n                  }\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"card text-center mb-2\">\r\n                    <div className=\"card-header bg-primary text-white\">\r\n                      <h3>In Progress</h3>\r\n                    </div>\r\n                  </div>\r\n                  {\r\n                    //  <!-- SAMPLE PROJECT TASK STARTS HERE -->\r\n                    //                     <!-- SAMPLE PROJECT TASK ENDS HERE -->\r\n                  }\r\n                  {inProgressItems}\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"card text-center mb-2\">\r\n                    <div className=\"card-header bg-success text-white\">\r\n                      <h3>Done</h3>\r\n                    </div>\r\n                  </div>\r\n                  {\r\n                    //<!-- SAMPLE PROJECT TASK STARTS HERE -->\r\n                    //<!-- SAMPLE PROJECT TASK ENDS HERE -->\r\n                  }\r\n\r\n                  {doneItems}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    };\r\n\r\n    BoardContent = BoardAlgorithm(project_tasks);\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to=\"/addProjectTask\" className=\"btn btn-primary mb-3\">\r\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {BoardContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  project_tasks: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project_tasks: state.project_task\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getBacklog }\r\n)(ProjectBoard);"]},"metadata":{},"sourceType":"module"}