{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\corentin\\\\Pictures\\\\Kanban-In-react-java\\\\project-board-react\\\\src\\\\components\\\\ProjectTask\\\\UpdateProjectTask.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { getProjectTask, addProjectTask } from \"../../actions/projectTaskActions\";\n\nclass UpdateProjectTask extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n\n    const _nextProps$project_ta = nextProps.project_task,\n          id = _nextProps$project_ta.id,\n          summary = _nextProps$project_ta.summary,\n          acceptanceCriteria = _nextProps$project_ta.acceptanceCriteria,\n          status = _nextProps$project_ta.status;\n    this.setState({\n      id,\n      summary,\n      acceptanceCriteria,\n      status\n    });\n  }\n\n  componentDidMount() {\n    const pt_id = this.props.match.params.pt_id;\n    this.props.getProjectTask(pt_id);\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const updatedTask = {\n      id: this.state.id,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.summary,\n      status: this.state.status\n    };\n    this.props.addProjectTask(updatedTask, this.props.history);\n  }\n\n  render() {\n    const errors = this.state.errors;\n    return React.createElement(\"div\", {\n      className: \"updateProjectTask\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-8 m-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/\",\n      className: \"btn btn-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Back to Board\"), React.createElement(\"h4\", {\n      className: \"display-4 text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Update Project Task\"), React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: classnames(\"form-control form-control-lg\", {\n        \"is-invalid\": errors.summary\n      }),\n      name: \"summary\",\n      placeholder: \"Project Task summary\",\n      value: this.state.summary,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), errors.summary && React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, errors.summary)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: \"form-control form-control-lg\",\n      placeholder: \"Acceptance Criteria\",\n      name: \"acceptanceCriteria\",\n      value: this.state.acceptanceCriteria,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      className: \"form-control form-control-lg\",\n      name: \"status\",\n      value: this.state.status,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Select Status\"), React.createElement(\"option\", {\n      value: \"TO_DO\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"TO DO\"), React.createElement(\"option\", {\n      value: \"IN_PROGRESS\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"IN PROGRESS\"), React.createElement(\"option\", {\n      value: \"DONE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"DONE\"))), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-primary btn-block mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nUpdateProjectTask.propTypes = {\n  project_task: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  getProjectTask: PropTypes.func.isRequired,\n  addProjectTask: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project_task: state.project_task.project_task,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  getProjectTask,\n  addProjectTask\n})(UpdateProjectTask);","map":{"version":3,"sources":["C:\\Users\\corentin\\Pictures\\Kanban-In-react-java\\project-board-react\\src\\components\\ProjectTask\\UpdateProjectTask.js"],"names":["React","Component","connect","classnames","PropTypes","getProjectTask","addProjectTask","UpdateProjectTask","constructor","state","id","summary","acceptanceCriteria","status","errors","onChange","bind","onSubmit","componentWillReceiveProps","nextProps","setState","project_task","componentDidMount","pt_id","props","match","params","e","target","name","value","preventDefault","updatedTask","history","render","propTypes","object","isRequired","func","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SACEC,cADF,EAEEC,cAFF,QAGO,kCAHP;;AAKA,MAAMC,iBAAN,SAAgCN,SAAhC,CAA0C;AACxCO,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,EAAE,EAAE,EADO;AAEXC,MAAAA,OAAO,EAAE,EAFE;AAGXC,MAAAA,kBAAkB,EAAE,EAHT;AAIXC,MAAAA,MAAM,EAAE,EAJG;AAKXC,MAAAA,MAAM,EAAE;AALG,KAAb;AAOA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAEDE,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnC,QAAIA,SAAS,CAACL,MAAd,EAAsB;AACpB,WAAKM,QAAL,CAAc;AAAEN,QAAAA,MAAM,EAAEK,SAAS,CAACL;AAApB,OAAd;AACD;;AAHkC,kCAKiBK,SAAS,CAACE,YAL3B;AAAA,UAK3BX,EAL2B,yBAK3BA,EAL2B;AAAA,UAKvBC,OALuB,yBAKvBA,OALuB;AAAA,UAKdC,kBALc,yBAKdA,kBALc;AAAA,UAKMC,MALN,yBAKMA,MALN;AAOnC,SAAKO,QAAL,CAAc;AACZV,MAAAA,EADY;AAEZC,MAAAA,OAFY;AAGZC,MAAAA,kBAHY;AAIZC,MAAAA;AAJY,KAAd;AAMD;;AAEDS,EAAAA,iBAAiB,GAAG;AAAA,UACVC,KADU,GACA,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MADjB,CACVH,KADU;AAElB,SAAKC,KAAL,CAAWnB,cAAX,CAA0BkB,KAA1B;AACD;;AAEDR,EAAAA,QAAQ,CAACY,CAAD,EAAI;AACV,SAAKP,QAAL,CAAc;AAAE,OAACO,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAA5B,KAAd;AACD;;AAEDb,EAAAA,QAAQ,CAACU,CAAD,EAAI;AACVA,IAAAA,CAAC,CAACI,cAAF;AACA,UAAMC,WAAW,GAAG;AAClBtB,MAAAA,EAAE,EAAE,KAAKD,KAAL,CAAWC,EADG;AAElBC,MAAAA,OAAO,EAAE,KAAKF,KAAL,CAAWE,OAFF;AAGlBC,MAAAA,kBAAkB,EAAE,KAAKH,KAAL,CAAWE,OAHb;AAIlBE,MAAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWI;AAJD,KAApB;AAOA,SAAKW,KAAL,CAAWlB,cAAX,CAA0B0B,WAA1B,EAAuC,KAAKR,KAAL,CAAWS,OAAlD;AACD;;AACDC,EAAAA,MAAM,GAAG;AAAA,UACCpB,MADD,GACY,KAAKL,KADjB,CACCK,MADD;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,IAAI,EAAC,GAAR;AAAY,MAAA,SAAS,EAAC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAIE;AAAI,MAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAJF,EAKE;AAAM,MAAA,QAAQ,EAAE,KAAKG,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAEd,UAAU,CAAC,8BAAD,EAAiC;AACpD,sBAAcW,MAAM,CAACH;AAD+B,OAAjC,CAFvB;AAKE,MAAA,IAAI,EAAC,SALP;AAME,MAAA,WAAW,EAAC,sBANd;AAOE,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,OAPpB;AAQE,MAAA,QAAQ,EAAE,KAAKI,QARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAWGD,MAAM,CAACH,OAAP,IACC;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmCG,MAAM,CAACH,OAA1C,CAZJ,CADF,EAgBE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,8BADZ;AAEE,MAAA,WAAW,EAAC,qBAFd;AAGE,MAAA,IAAI,EAAC,oBAHP;AAIE,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWG,kBAJpB;AAKE,MAAA,QAAQ,EAAE,KAAKG,QALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAhBF,EAyBE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,8BADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWI,MAHpB;AAIE,MAAA,QAAQ,EAAE,KAAKE,QAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAME;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANF,EAOE;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAPF,EAQE;AAAQ,MAAA,KAAK,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBARF,EASE;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,CADF,CAzBF,EAsCE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,gCAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtCF,CALF,CADF,CADF,CADF,CADF;AAyDD;;AA5GuC;;AA+G1CR,iBAAiB,CAAC4B,SAAlB,GAA8B;AAC5Bd,EAAAA,YAAY,EAAEjB,SAAS,CAACgC,MAAV,CAAiBC,UADH;AAE5BvB,EAAAA,MAAM,EAAEV,SAAS,CAACgC,MAAV,CAAiBC,UAFG;AAG5BhC,EAAAA,cAAc,EAAED,SAAS,CAACkC,IAAV,CAAeD,UAHH;AAI5B/B,EAAAA,cAAc,EAAEF,SAAS,CAACkC,IAAV,CAAeD;AAJH,CAA9B;;AAOA,MAAME,eAAe,GAAG9B,KAAK,KAAK;AAChCY,EAAAA,YAAY,EAAEZ,KAAK,CAACY,YAAN,CAAmBA,YADD;AAEhCP,EAAAA,MAAM,EAAEL,KAAK,CAACK;AAFkB,CAAL,CAA7B;;AAKA,eAAeZ,OAAO,CACpBqC,eADoB,EAEpB;AAAElC,EAAAA,cAAF;AAAkBC,EAAAA;AAAlB,CAFoB,CAAP,CAGbC,iBAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  getProjectTask,\r\n  addProjectTask\r\n} from \"../../actions/projectTaskActions\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n\r\n    const { id, summary, acceptanceCriteria, status } = nextProps.project_task;\r\n\r\n    this.setState({\r\n      id,\r\n      summary,\r\n      acceptanceCriteria,\r\n      status\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { pt_id } = this.props.match.params;\r\n    this.props.getProjectTask(pt_id);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updatedTask = {\r\n      id: this.state.id,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.summary,\r\n      status: this.state.status\r\n    };\r\n\r\n    this.props.addProjectTask(updatedTask, this.props.history);\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"updateProjectTask\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <a href=\"/\" className=\"btn btn-light\">\r\n                Back to Board\r\n              </a>\r\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  project_task: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  addProjectTask: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  project_task: state.project_task.project_task,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProjectTask, addProjectTask }\r\n)(UpdateProjectTask);"]},"metadata":{},"sourceType":"module"}